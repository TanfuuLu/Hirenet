// <auto-generated />
using System;
using Hirenet.Contract.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hirenet.Contract.Infrastructure.Migrations
{
    [DbContext(typeof(ContractDbContext))]
    partial class ContractDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hirenet.Contract.Domain.Models.JobContract", b =>
                {
                    b.Property<int>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractId"));

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContractStatus")
                        .HasColumnType("int");

                    b.Property<string>("ContractType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ContractId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("Hirenet.Contract.Domain.Models.Milestone", b =>
                {
                    b.Property<int>("MilestoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MilestoneId"));

                    b.Property<DateTime?>("DateCompleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("JobContractContractId")
                        .HasColumnType("int");

                    b.Property<string>("MilestoneDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MilestoneEndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MilestoneStatus")
                        .HasColumnType("int");

                    b.Property<string>("MilestoneTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MilestoneId");

                    b.HasIndex("JobContractContractId");

                    b.ToTable("Milestones");
                });

            modelBuilder.Entity("Hirenet.Contract.Domain.Models.MilestoneFile", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FileId"));

                    b.Property<DateTime>("DateUploaded")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MilestoneId")
                        .HasColumnType("int");

                    b.HasKey("FileId");

                    b.HasIndex("MilestoneId");

                    b.ToTable("MilestoneFiles");
                });

            modelBuilder.Entity("Hirenet.Contract.Domain.Models.Milestone", b =>
                {
                    b.HasOne("Hirenet.Contract.Domain.Models.JobContract", null)
                        .WithMany("Milestones")
                        .HasForeignKey("JobContractContractId");
                });

            modelBuilder.Entity("Hirenet.Contract.Domain.Models.MilestoneFile", b =>
                {
                    b.HasOne("Hirenet.Contract.Domain.Models.Milestone", "Milestone")
                        .WithMany("MilestoneFiles")
                        .HasForeignKey("MilestoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Milestone");
                });

            modelBuilder.Entity("Hirenet.Contract.Domain.Models.JobContract", b =>
                {
                    b.Navigation("Milestones");
                });

            modelBuilder.Entity("Hirenet.Contract.Domain.Models.Milestone", b =>
                {
                    b.Navigation("MilestoneFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
